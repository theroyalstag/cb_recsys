# -*- coding: utf-8 -*-
"""cb_recsys

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UJFAZaoqj_aKCVGqyMI3JBmRa0mi021n
"""

import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer

users = pd.read_csv("/content/24.1_november_cleanedData (1) (2) (1).csv")
users.head()

users.field_solutiondescription.isnull().sum()

len(users.field_solutiondescription)

df = users[['nid','title','field_solutiondescription','field_solutionshortdescription','field_solutiontype','Key-Words','field_solutiondescriptionimage']]

df.isnull().sum()

for i in df.columns:
    df[i].replace(np.nan,'unknown',regex=True,inplace=True)
df.isnull().sum()

df.duplicated().sum()

df.head()

df['Key-Words'][0]

def convert(x):
    x = eval(x)
    if type(x)==dict:
        return list(x.values())
    else:
        return x
df["text"] = df["Key-Words"].apply(convert)
df["solutiondescription"] = df["field_solutiondescription"].apply(lambda x: str(x).split())+df["field_solutionshortdescription"].apply(lambda x: str(x).split())


df["text"] = df["solutiondescription"]+df["text"]
df["text"] = df["text"].apply(lambda x:list(set(x)))

df.text

df = df.drop('Key-Words', axis=1)
df.head()

new_df=df[['nid','title','text']]
new_df.head()

new_df['text'][0]

new_df['tags'] =  new_df['text'].apply(lambda x:",".join(x))
new_df['tags'][0]

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=5000, stop_words='english')

vectors = cv.fit_transform(new_df['tags']).toarray()
vectors

cv.get_feature_names()

import nltk
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

def stem(text):
    y = []
    for i in text.split():
        y.append(ps.stem(i))
    return " ".join(y)

new_df['tags'] = new_df['tags'].apply(stem)

new_df.tags.unique()

from sklearn.metrics.pairwise import cosine_similarity
cosine_similarity(vectors)

similarity = cosine_similarity(vectors)
#output
# (4806,4806)

cosine_similarity(vectors).shape

new_df.title

item_index = new_df[new_df['title']=='Brand Equity'].nid.values[0]
distances = similarity[item_index]
item_list = sorted(list(enumerate(distances)),reverse=True,key=lambda x:x[1])

new_df.title.unique()

item_index = new_df[new_df['title']=='Supplier Financial Risk'].nid.values[0]
distances = similarity[item_index]
item_list = sorted(list(enumerate(distances)),reverse=True,key=lambda x:x[1])

item_list

!pip install streamlit --user